import com.google.gson.JsonParser

plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
}

subprojects {
    apply plugin: "dev.architectury.loom"

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft_version}"
        mappings "net.fabricmc:yarn:${minecraft_version}+${yarn_mappings}:v2"
    }

    processResources {
        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand project.properties
        }

        doLast {
            fileTree(dir: outputs.files.asPath, include: "**/*.json").each {
                File file -> file.text = JsonParser.parseString(file.text).toString();
            }
            delete outputs.files.asPath + "/.cache"
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }
}
